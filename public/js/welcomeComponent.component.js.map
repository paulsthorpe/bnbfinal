{"version":3,"sources":["welcomeComponent.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBA;gBAgBI;;;;;;;mBAOG;gBACH,0BAAoB,YAA2B,EAC5B,YAAyB,EACxB,WAA4B,EAC5B,MAAa,EACb,cAA6B;oBAJ7B,iBAAY,GAAZ,YAAY,CAAe;oBAC5B,iBAAY,GAAZ,YAAY,CAAa;oBACxB,gBAAW,GAAX,WAAW,CAAiB;oBAC5B,WAAM,GAAN,MAAM,CAAO;oBACb,mBAAc,GAAd,cAAc,CAAe;oBAzBjD;;;uBAGG;oBACH,SAAI,GAAG,IAAI,qBAAY,CAAC;wBAEpB,WAAW,EAAE,IAAI,gBAAO,CAAC,EAAE,EACvB,mBAAU,CAAC,OAAO,CAAC,CAAC,mBAAU,CAAC,QAAQ;4BACnC,IAAI,CAAC,WAAW,CAAC,kBAAkB;4BACnC,IAAI,CAAC,WAAW,CAAC,yBAAyB;4BAC1C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC1C,CAAC,CAAC;gBAeH,CAAC;gBAED,mCAAQ,GAAR;gBACA,CAAC;gBAED;;mBAEG;gBACH,oCAAS,GAAT;oBACI,IAAI,CAAC,KAAK,GAAG;wBACT,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;qBACrC,CAAA;oBACD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9C,CAAC;gBAED;;;mBAGG;gBACH,6CAAkB,GAAlB,UAAmB,UAAU;oBACzB,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBACvD,CAAC;gBAED;;;;;mBAKG;gBACH,qCAAU,GAAV,UAAW,IAAI,EAAE,UAAU,EAAE,SAAS;oBAClC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;gBAChE,CAAC;gBApEL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,SAAS;wBACnB,WAAW,EAAE,qCAAqC;wBAClD,UAAU,EAAE,CAAC,qCAAiB,EAAE,8BAAa,CAAC;wBAC9C,SAAS,EAAE,CAAC,qCAAgB,EAAE,gCAAc,CAAC;wBAC7C,MAAM,EAAE,CAAC,oBAAoB,EAAE,iCAAiC,CAAC;qBACpE,CAAC;;oCAAA;gBAgEF,uBAAC;YAAD,CA9DA,AA8DC,IAAA;YA9DD,+CA8DC,CAAA","file":"welcomeComponent.component.js","sourcesContent":["import {bootstrap} from '@angular/platform-browser-dynamic';\nimport {Component, OnInit} from '@angular/core';\nimport {CartComponent} from './cart.component';\nimport {OrderService} from './order.service';\nimport {ReorderService} from './reorder.service';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS, Router} from '@angular/router-deprecated';\nimport {HTTP_PROVIDERS} from '@angular/http';\nimport {RequestService} from './http.service';\nimport {ControlGroup, Control, Validators} from '@angular/common';\nimport {ValidatorService} from './validators.service';\n\n\n@Component({\n    selector: 'welcome',\n    templateUrl: './components/welcome.component.html',\n    directives: [ROUTER_DIRECTIVES, CartComponent],\n    providers: [ValidatorService, ReorderService],\n    inputs: ['orderService.order', 'reorderService.pastOrdersClient']\n})\n\nexport class WelcomeComponent implements OnInit {\n\n    phone:Phone;\n    /**\n     * form for retrieving users past orders\n     * @type {ControlGroup}\n     */\n    form = new ControlGroup({\n\n        phoneLookup: new Control('',\n            Validators.compose([Validators.required,\n                this._validators.cannotContainSpace,\n                this._validators.cannotContainSpecialChars,\n                this._validators.phoneLength])),\n    });\n\n    /**\n     * inject services\n     * @param _httpService\n     * @param orderService\n     * @param _validators\n     * @param router\n     * @param reorderService\n     */\n    constructor(private _httpService:RequestService,\n                public orderService:OrderService,\n                private _validators:ValidatorService,\n                private router:Router,\n                private reorderService:ReorderService) {\n    }\n\n    ngOnInit() {\n    }\n\n    /**\n     * call reorder service method to post to api and recieve a response\n     */\n    getOrders() {\n        this.phone = {\n            phone: this.form.value.phoneLookup\n        }\n        this.reorderService.getOrders(this.phone);\n    }\n\n    /**\n     * call reorder service method to build up a current order from prev order\n     * @param orderIndex\n     */\n    retrieveOrderState(orderIndex) {\n        this.reorderService.retrieveOrderState(orderIndex);\n    }\n\n    /**\n     * create a cart and api item from past order selected by user\n     * @param data\n     * @param orderIndex\n     * @param itemIndex\n     */\n    applyOrder(data, orderIndex, itemIndex) {\n        this.reorderService.applyOrder(data, orderIndex, itemIndex);\n    }\n\n}\n\n/**\n * interface for user input(phone)\n */\nexport interface Phone {\n    phone:string;\n}\n"],"sourceRoot":"/source/"}