{"version":3,"sources":["http.service.ts"],"names":[],"mappings":"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","file":"http.service.js","sourcesContent":["import {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport {Injectable} from '@angular/core';\nimport { Headers, RequestOptions } from '@angular/http';\n\n\n@Injectable()\nexport class RequestService {\n\n  constructor(private _http: Http){\n\n  }\n\n  getMenuItem(id) {\n    return this._http.get(\"http://localhost:8000/getItems/\"+id)\n      .map(res => res.json());\n  }\n\n  getMenuItems() {\n    return this._http.get(\"http://localhost:8000/getItems\")\n      .map(res => res.json());\n  }\n\n\n  getAddOns() {\n    return this._http.get(\"http://localhost:8000/getAddOns\")\n      .map(res => res.json());\n  }\n\n  getToken() {\n  let token = document.querySelector('meta[property=\"csrf-token\"]')['content'];\n  return token;\n  }\n\n  postJSON(item) {\n\n    let json = JSON.stringify(item);\n\n    let headers = new Headers();\n\n    headers.append('Content-type', 'application/json');\n\n    headers.append('X-CSRF-TOKEN', this.getToken());\n\n    return this._http.post('http://localhost:8000/recieveAPI', json , {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n  getOrders(item) {\n\n    let json = JSON.stringify(item);\n\n    let headers = new Headers();\n\n    headers.append('Content-type', 'application/json');\n\n    headers.append('X-CSRF-TOKEN', this.getToken());\n\n    return this._http.post('http://localhost:8000/getOrders', json , {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n  getOrdersClient(item) {\n\n    let json = JSON.stringify(item);\n\n    let headers = new Headers();\n\n    headers.append('Content-type', 'application/json');\n\n    headers.append('X-CSRF-TOKEN', this.getToken());\n\n    return this._http.post('http://localhost:8000/getOrdersClient', json , {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n  getSpecificAddOns(item) {\n\n    let json = JSON.stringify(item);\n\n    let headers = new Headers();\n\n    headers.append('Content-type', 'application/json');\n\n    headers.append('X-CSRF-TOKEN', this.getToken());\n\n    return this._http.post('http://localhost:8000/getSpecificAddOns', json , {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n\n}\n"],"sourceRoot":"/source/"}