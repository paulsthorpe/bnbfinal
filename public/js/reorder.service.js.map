{"version":3,"sources":["reorder.service.ts"],"names":[],"mappings":"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","file":"reorder.service.js","sourcesContent":["import {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport {Injectable} from '@angular/core';\nimport {Headers, RequestOptions} from '@angular/http';\nimport {OrderService} from './order.service';\nimport {RequestService} from './http.service';\n\n\n@Injectable()\nexport class ReorderService {\n\n    pastOrders = [];\n\n    pastOrdersClient = [];\n\n    addOns:AddOn;\n\n    apiItem:ConfigAPI;\n\n    cartItem:ConfigCART;\n\n    /**\n     *\n     * @param _httpService\n     * @param orderService\n     */\n    constructor(private _httpService:RequestService,\n                public orderService:OrderService) {\n\n    }\n\n    /**\n     * This method will make to calls to the api based on user input, one to get\n     * user relevant data, the other to get api relevant data(from past orders)\n     * maybe this should be one call and a bigger array, for now it stays like this\n     * @param phone\n     */\n    getOrders(phone) {\n\n        this._httpService.getOrders(phone)\n            .subscribe(data => this.orgData(data));\n\n        this._httpService.getOrdersClient(phone)\n            .subscribe(data => this.orgDataClient(data));\n\n    }\n\n    /**\n     * Possibly removed, not sure if it has future use\n     * @param data\n     */\n    orgData(data) {\n        let length = data.length;\n\n        for (var i = 0; i < length; i++) {\n            let pastOrder = [];\n\n            let items = data[i].items.length;\n            let col = [];\n            for (var a = 0; a < items; a++) {\n                let oItem = [];\n\n                let tops = data[i].items[a].additionals.length;\n                let toppings = [];\n                for (var b = 0; b < tops; b++) {\n                    toppings.push(data[i].items[a].additionals[b]);\n                }\n\n                oItem['item_id'] = data[i].items[a].item_id;\n                oItem['additionals'] = toppings;\n\n                col.push(oItem);\n            }\n\n            pastOrder['order_id'] = data[i].order_id;\n            pastOrder['items'] = col;\n\n\n            this.pastOrders.push(pastOrder);\n\n        }\n\n\n    }\n\n    /**\n     * Possibly removed, not sure if it has future use\n     * @param data\n     */\n    orgDataClient(data) {\n\n        let length = data.length;\n\n        for (var i = 0; i < length; i++) {\n            let pastOrder = [];\n\n            let items = data[i].items.length;\n            let col = [];\n            for (var a = 0; a < items; a++) {\n                let oItem = [];\n\n                let tops = data[i].items[a].additionals.length;\n                let toppings = [];\n                for (var b = 0; b < tops; b++) {\n                    toppings.push(data[i].items[a].additionals[b]);\n                }\n\n                oItem['name'] = data[i].items[a].name;\n                oItem['price'] = data[i].items[a].price;\n                oItem['additionals'] = toppings;\n\n                col.push(oItem);\n            }\n\n            pastOrder['order_id'] = data[i].order_id;\n            pastOrder['items'] = col;\n            this.pastOrdersClient.push(pastOrder);\n\n        }\n    }\n\n\n\n    /**\n     * Retrieve the index from user click event and fire applyOrder()\n     * @param orderIndex\n     */\n    retrieveOrderState(orderIndex) {\n\n        let total = this.pastOrders[orderIndex].items.length;\n\n        for (var itemIndex = 0; itemIndex < total; itemIndex++) {\n\n            let index = itemIndex;\n\n            this._httpService.getSpecificAddOns(this.pastOrders[orderIndex].items[itemIndex].additionals)\n                .subscribe(data => this.applyOrder(data, orderIndex, index));\n\n        }\n\n    }\n\n    /**\n     * This method retrieves which order a user clicks on from retrieveOrderState, retrieves the array index,\n     * which is supplied to the view by the array that feeds it(pastOrdersClient) and then in turn builds the standard\n     * application array that displays order data to the user.\n     *\n     * Once this process is complete it does the same process, but for the array that contains api item interfaces\n     * which will be sent to the api for processing\n     * @param data\n     * @param orderIndex\n     * @param itemIndex\n     */\n    applyOrder(data, orderIndex, itemIndex) {\n\n        //Initialize length to serve as the index for the iteration below\n        let length = data.length;\n        //Set these properties to empty array to ensure they are empty before using them.\n        //You never know....\n        this.orderService.apiAdditionals = [];\n        this.orderService.cartAdditionals = [];\n        this.orderService.cartPrices = [];\n        //store the cart total\n        this.orderService.cartPrices.push(this.pastOrdersClient[orderIndex].items[itemIndex].price);\n\n        for (var i = 0; i < length; i++) {\n            //foreach topping in the api and client past order arrays, push to our default arrays\n            this.orderService.apiAdditionals.push(data[i].id);\n            this.orderService.cartAdditionals.push(data[i].name);\n            //store individual item prices in client order\n            this.orderService.cartPrices.push(data[i].price);\n            //store individual prices in api order\n            this.orderService.total = this.orderService.cartPrices.reduce(function (total, num) {\n                return total + num\n            });\n\n        }\n\n        //create order item interface to store in our api order array\n        this.apiItem = {\n            item_id: this.pastOrders[orderIndex].items[itemIndex].item_id,\n            additionals: this.orderService.apiAdditionals\n        }\n\n        //create order item interface in our client order array\n        this.cartItem = {\n            name: this.pastOrdersClient[orderIndex].items[itemIndex].name,\n            additionals: this.orderService.cartAdditionals,\n            prices: this.orderService.cartPrices,\n            total: this.orderService.total,\n        }\n\n        //push the interfaces o its respective destination, client or api\n        this.orderService.addToOrder(this.apiItem);\n        this.orderService.addToCart(this.cartItem);\n        this.orderService.itemPrices.push(this.orderService.total);\n\n    }\n\n\n\n}\n\n/**\n *\n */\nexport interface AddOn {\n    id:number,\n    name:string,\n    price:number\n}\n\n/**\n * Interface previous orders, orderItem stores individual items and an array of toppings\n */\nexport interface pastOrder {\n    order_id:number,\n    orderItem:pOrderItem[]\n}\n\n/**\n *\n */\nexport interface pOrderItem {\n    item_id:number,\n    additionals:number[]\n}\n\n/**\n *\n */\nexport interface ConfigAPI {\n    item_id:any,\n    additionals:any,\n}\n\n/**\n *\n */\nexport interface ConfigCART {\n    name:string,\n    additionals:any,\n    prices:any,\n    total:number,\n}\n"],"sourceRoot":"/source/"}