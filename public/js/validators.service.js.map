{"version":3,"sources":["validators.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAKA;gBAEE;gBACA,CAAC;gBAED,6CAAkB,GAAlB,UAAmB,OAAgB;oBACjC,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAA,CAAC;wBAChC,MAAM,CAAC,EAAC,kBAAkB,EAAC,IAAI,EAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;gBAED,oDAAyB,GAAzB,UAA0B,OAAgB;oBACxC,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAA,CAAC;wBAChC,MAAM,CAAC,EAAC,kBAAkB,EAAC,IAAI,EAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAA,CAAC;wBACvC,MAAM,CAAC,EAAC,kBAAkB,EAAC,IAAI,EAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAA,CAAC;wBACvC,MAAM,CAAC,EAAC,kBAAkB,EAAC,IAAI,EAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAA,CAAC;wBACvC,MAAM,CAAC,EAAC,kBAAkB,EAAC,IAAI,EAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;gBAED,sCAAW,GAAX,UAAY,OAAgB;oBAC1B,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,CAAA,CAAC;wBAC7B,MAAM,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,CAAE,CAAC,CAAA,CAAC;wBACpC,MAAM,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;gBApCH;oBAAC,iBAAU,EAAE;;oCAAA;gBAwCb,uBAAC;YAAD,CAvCA,AAuCC,IAAA;YAvCD,+CAuCC,CAAA","file":"validators.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {ControlGroup, Control, Validators} from '@angular/common';\n\n\n@Injectable()\nexport class ValidatorService {\n\n  constructor(){\n  }\n\n  cannotContainSpace(control: Control){\n    if(control.value.indexOf(' ')>=0){\n      return {cannotContainChars:true};\n    } else {\n      return null;\n    }\n  }\n\n  cannotContainSpecialChars(control: Control){\n    if(control.value.indexOf('/')>=0){\n      return {cannotContainChars:true};\n    } else if(control.value.indexOf('-')>=0){\n      return {cannotContainChars:true};\n    } else if(control.value.indexOf('(')>=0){\n      return {cannotContainChars:true};\n    } else if(control.value.indexOf(')')>=0){\n      return {cannotContainChars:true};\n    } else {\n      return null;\n    }\n  }\n\n  phoneLength(control: Control){\n    if(control.value.length >= 11){\n      return {phoneLength:true};\n    } else if(control.value.length <= 9 ){\n      return {phoneLength:true};\n    } else {\n      return null;\n    }\n  }\n\n\n\n}\n"],"sourceRoot":"/source/"}