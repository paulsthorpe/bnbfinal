{"version":3,"sources":["configItem.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBA;gBAwBE,6BAAoB,YAA4B,EAAU,YAAyB,EAAS,YAA2B;oBAAnG,iBAAY,GAAZ,YAAY,CAAgB;oBAAU,iBAAY,GAAZ,YAAY,CAAa;oBAAS,iBAAY,GAAZ,YAAY,CAAe;oBAZvH,6DAA6D;oBAC7D,oBAAe,GAAG,EAAE,CAAC;oBACrB,eAAU,GAAG,EAAE,CAAC;oBAIhB,yCAAyC;oBACzC,mBAAc,GAAG,EAAE,CAAC;gBAMpB,CAAC;gBAED,sCAAQ,GAAR;oBAAA,iBAYC;oBAXC,aAAa;oBACb,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBAExC,kEAAkE;oBAClE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;yBACrC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAA;oBAEpC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;yBAC5B,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,IAAI,EAAlB,CAAkB,CAAC,CAAA;oBACtC,4BAA4B;oBAC5B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gBACf,CAAC;gBAGD,iCAAG,GAAH,UAAK,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK;oBACpC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;gBAC7D,CAAC;gBAGD,oCAAM,GAAN,UAAQ,EAAE,EAAE,KAAK;oBACf,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClD,CAAC;gBA3DH;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,MAAM;wBAChB,WAAW,EAAE,wCAAwC;wBACrD,UAAU,EAAE,CAAC,qCAAiB,EAAE,8BAAa,CAAC;wBAC9C,SAAS,EAAE,CAAC,6BAAc,EAAE,qBAAc,CAAC;wBAC3C,MAAM,EAAE,CAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC;qBAC3C,CAAC;;uCAAA;gBAwDF,0BAAC;YAAD,CApDA,AAoDC,IAAA;YApDD,qDAoDC,CAAA","file":"configItem.component.js","sourcesContent":["import {bootstrap} from '@angular/platform-browser-dynamic';\nimport {Component, OnInit} from '@angular/core';\nimport {CartComponent} from './cart.component';\nimport {RequestService} from './http.service';\nimport {OrderService} from './order.service';\nimport {HTTP_PROVIDERS} from '@angular/http';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS, RouteParams} from '@angular/router-deprecated';\n\n\n\n@Component({\n    selector: 'item',\n    templateUrl: './components/itemConfig.component.html',\n    directives: [ROUTER_DIRECTIVES, CartComponent],\n    providers: [RequestService, HTTP_PROVIDERS],\n    inputs: [ 'item', 'addOns', 'itemPrice']\n})\n\n\n\nexport class ConfigItemComponent implements OnInit{\n  //to store uri param for item id\n  id: any;\n  //store item data per uri param\n  item: Item;\n  itemPrice: number;\n  //store all addOns from api source\n  addOns: any;\n\n  qty: number;\n  qtyMessage: string;\n\n  //store relevant config item data for display in angular cart\n  cartAdditionals = [];\n  cartPrices = [];\n  total: number;\n  cartItem: ConfigCART;\n\n  //store relevant config item data for api\n  apiAdditionals = [];\n  apiItem: ConfigAPI;\n\n\n\n  constructor(private _httpService: RequestService, private _routeParams: RouteParams, public orderService : OrderService){\n  }\n\n  ngOnInit() {\n    //get item id\n    this.id = this._routeParams.get(\"item\");\n\n    //send item id to api to retieve selected menu item, store in item\n    this._httpService.getMenuItem(this.id)\n    .subscribe(data => this.item = data)\n\n    this._httpService.getAddOns()\n    .subscribe(data => this.addOns = data)\n    // console.log(this.addOns);\n    this.qty = 1;\n  }\n\n\n  add( idValue, nameValue, prices, event ){\n    this.orderService.add( idValue, nameValue, prices, event );\n  }\n\n\n  create( id, price ){\n    this.orderService.create( id, price, this.item);\n  }\n\n\n}\n\n\n\nexport interface Item{\n  name: any,\n  id: any,\n  price: any\n}\n\nexport interface ConfigAPI{\n  item_id: any,\n  additionals: any,\n}\n\nexport interface ConfigCART {\n  name: string,\n  additionals: any,\n  prices: any,\n  total: number,\n}\n"],"sourceRoot":"/source/"}