{"version":3,"sources":["order.service.ts"],"names":[],"mappings":"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","file":"order.service.js","sourcesContent":["import {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport {Injectable} from '@angular/core';\n\n\n@Injectable()\nexport class OrderService {\n    //array to hold json objects to send to api to persist data to database\n    order = [];\n    //array to hold similar json objects containing user relevant information to display in angular cart\n    cart = [];\n    itemPrices = [];\n    contactInfo = [];\n    customer:Cust;\n    orderComplete:boolean = false;\n\n    addOn:AddOn;\n    addOns = [];\n\n\n    //////CONFIGITEM PROPERTIES\n\n    qty:number;\n    qtyMessage:string;\n\n    //store relevant config item data for display in angular cart\n    cartAdditionals = [];\n    cartPrices = [];\n    total:number;\n    cartItem:ConfigCART;\n\n    //store relevant config item data for api\n    apiAdditionals = [];\n    apiItem:ConfigAPI;\n\n    item:Item;\n\n    constructor() {\n    }\n\n    addToOrder(item) {\n        this.order.push(item);\n        //clear previous array to avoid duplication\n        this.apiAdditionals = [];\n    }\n\n    addToCart(item) {\n        this.cart.push(item);\n        //clear previous arrays to avoid duplication\n        this.cartPrices = [];\n        this.cartAdditionals = [];\n    }\n\n    formatPrice(input) {\n        return (input / 100).toFixed(2);\n    }\n\n    calcTax(price) {\n        return price * .0675;\n    }\n\n    storeCust(object) {\n        this.customer = {\n            name: object.name,\n            phone: object.phone,\n        }\n    }\n\n\n////////////CONFIGITEM METHODs\n\n    add(idValue, nameValue, prices, event) {\n        //if checked store addOn ids in array to send to api\n        if (event.target.checked) {\n            this.apiAdditionals.push(idValue);\n\n        }\n        //if UNchecked remove addOn ids from array to send to api\n        else if (!event.target.checked) {\n            let index = this.apiAdditionals.indexOf(idValue);\n            this.apiAdditionals.splice(index, 1);\n\n        }\n        //log for testing\n        // console.log(this.apiAdditionals);\n\n        //store addOn names to array to use for readable cart values\n        if (event.target.checked) {\n            this.cartAdditionals.push(nameValue);\n            this.cartPrices.push(prices);\n\n        }\n\n        else if (!event.target.checked) {\n            let index = this.cartAdditionals.indexOf(nameValue);\n            this.cartAdditionals.splice(index, 1);\n            this.cartPrices.splice(index, 1);\n        }\n        console.log(this.cartAdditionals);\n        console.log(this.cartPrices);\n    }\n\n\n    create(id, price, item) {\n        this.cartPrices.push(price);\n        this.total = this.cartPrices.reduce(function (total, num) {\n            return total + num\n        });\n        // !!!!!!!!!!!!!!!!!!!FOR API!!!!!!!!!!!!!!!!!!!!!!!//\n        //set interface with selected menuitem and addons\n        this.apiItem = {\n            item_id: item.id,\n            additionals: this.apiAdditionals\n        };\n\n\n        //push interface object into API array\n        this.addToOrder(this.apiItem);\n\n        console.log(this.order);\n\n\n        // !!!!!!!!!!!!!!!!!!!FOR CART!!!!!!!!!!!!!!!!!!!!!!!//\n        //set interface with selected menuitem and addons\n        this.cartItem = {\n            name: item.name,\n            additionals: this.cartAdditionals,\n            prices: this.cartPrices,\n            total: this.total,\n        };\n\n        //push interface object into API array\n        this.addToCart(this.cartItem);\n        this.itemPrices.push(this.total);\n        console.log(this.cart);\n    }\n\n\n//////INTEFRFACES\n\n}\nexport interface Cust {\n    name:string,\n    phone:string\n}\n\nexport interface AddOn {\n    id:number,\n    name:string,\n    price:number\n}\n\nexport interface Item {\n    name:any,\n    id:any,\n    price:any\n}\n\nexport interface ConfigAPI {\n    item_id:any,\n    additionals:any,\n}\n\nexport interface ConfigCART {\n    name:string,\n    additionals:any,\n    prices:any,\n    total:number,\n}\n"],"sourceRoot":"/source/"}